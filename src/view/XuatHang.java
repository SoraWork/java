/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;
import javax.swing.table.DefaultTableModel;
import pack1.DBConnect;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.*;
import java.sql.Connection;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Windows 10 Pro
 */
public class XuatHang extends javax.swing.JPanel {
    public String tk;
    DBConnect db = new DBConnect();
    Connection conn;

    /**
     * Creates new form XuatHang
     */
    public XuatHang() {
        initComponents();
    }
    public XuatHang(String tk) {
        this.tk=tk;
        initComponents();
        LocalDate today = LocalDate.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        String formattedDate = today.format(formatter);
        txt_ngaylap.setText(formattedDate);
    }
    
    public void reset(){
        DefaultTableModel tableModel = (DefaultTableModel) TableXuatHang.getModel();
        tableModel.setRowCount(0);
        tableModel.setRowCount(22);
        TableXuatHang.setModel(tableModel);
        txt_donhang.setText("");
        txt_tenkh.setText("");
        txt_makh.setText("");
        txt_sdt.setText("");
        txt_diachi.setText("");
    }

    public void TinhTong(){
        int i=0,d=0;
        HangTable hangtable = new HangTable();
            while(TableXuatHang.getValueAt(i, 0)!=null){ //Ktra bảng đầy đủ thông tin chưa
                Object a1 = TableXuatHang.getValueAt(i, 0);
                Object a2 = TableXuatHang.getValueAt(i, 1);
                Object a3 = TableXuatHang.getValueAt(i, 2);
                Object a4 = TableXuatHang.getValueAt(i, 3);
                i++;
            }
            int rowCount = i;   // lấy dl ở bảng
            for (int row = 0; row < rowCount; row++) {
                String a = (String) TableXuatHang.getValueAt(row, 0);
                String b = (String) TableXuatHang.getValueAt(row, 1);
                long c = (long) TableXuatHang.getValueAt(row, 2);
                if(TableXuatHang.getValueAt(row, 3)==null){
                    
                    break;
                }
                else{
                    d = (int) TableXuatHang.getValueAt(row, 3);
                }
                HangDb hang = new HangDb(a,b,c,d);
                hangtable.AddItem(hang);
            }
            hangtable.Tinhtonggt();
            String giatri = Long.toString(hangtable.getTonggiatri());
            txt_tonghd.setText(giatri);
        }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_makh1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableXuatHang = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_donhang = new javax.swing.JTextArea();
        btnXacNhan = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_tonghd = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_tenkh = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_sdt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_diachi = new javax.swing.JTextField();
        txt_ngaylap = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_makh = new javax.swing.JTextField();

        setBackground(new java.awt.Color(246, 246, 174));

        TableXuatHang.setAutoCreateRowSorter(true);
        TableXuatHang.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        TableXuatHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã hàng", "Tên hàng", "Đơn giá ", "Số lượng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableXuatHang.setColumnSelectionAllowed(true);
        TableXuatHang.setRowHeight(30);
        TableXuatHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableXuatHangMouseClicked(evt);
            }
        });
        TableXuatHang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TableXuatHangKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(TableXuatHang);
        TableXuatHang.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (TableXuatHang.getColumnModel().getColumnCount() > 0) {
            TableXuatHang.getColumnModel().getColumn(0).setMinWidth(250);
            TableXuatHang.getColumnModel().getColumn(0).setMaxWidth(250);
            TableXuatHang.getColumnModel().getColumn(1).setMinWidth(500);
            TableXuatHang.getColumnModel().getColumn(1).setMaxWidth(500);
            TableXuatHang.getColumnModel().getColumn(2).setMinWidth(250);
            TableXuatHang.getColumnModel().getColumn(2).setMaxWidth(250);
            TableXuatHang.getColumnModel().getColumn(3).setMinWidth(166);
            TableXuatHang.getColumnModel().getColumn(3).setMaxWidth(166);
        }

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Mã đơn hàng: ");

        txt_donhang.setColumns(1);
        txt_donhang.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txt_donhang.setRows(1);
        jScrollPane2.setViewportView(txt_donhang);

        btnXacNhan.setText("Xác nhận");
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });

        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Ngày xuất hàng:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Tổng giá trị : ");

        txt_tonghd.setEditable(false);
        txt_tonghd.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txt_tonghd.setBorder(null);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Tên khách hàng");

        txt_tenkh.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("SĐT");

        txt_sdt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_sdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_sdtActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Địa chỉ");

        txt_diachi.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        txt_ngaylap.setEditable(false);
        txt_ngaylap.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txt_ngaylap.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_ngaylap.setBorder(null);
        txt_ngaylap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ngaylapActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Mã Khách Hàng");

        txt_makh.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_makh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_makhKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout txt_makh1Layout = new javax.swing.GroupLayout(txt_makh1);
        txt_makh1.setLayout(txt_makh1Layout);
        txt_makh1Layout.setHorizontalGroup(
            txt_makh1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(txt_makh1Layout.createSequentialGroup()
                .addGroup(txt_makh1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txt_makh1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_tonghd, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(txt_makh1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(txt_makh1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                        .addGap(34, 34, 34)
                        .addGroup(txt_makh1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(txt_makh1Layout.createSequentialGroup()
                                .addGroup(txt_makh1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2)
                                    .addComponent(txt_tenkh, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(txt_makh1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(txt_makh1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_makh, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                    .addComponent(txt_sdt)))
                            .addComponent(txt_diachi))
                        .addGap(76, 76, 76)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_ngaylap, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        txt_makh1Layout.setVerticalGroup(
            txt_makh1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txt_makh1Layout.createSequentialGroup()
                .addGroup(txt_makh1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(txt_makh1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(txt_makh1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_ngaylap)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(txt_makh)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(txt_makh1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(txt_makh1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_sdt, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_tenkh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(txt_makh1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_diachi, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(txt_makh1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(txt_makh1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_tonghd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(txt_makh1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_makh1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_makh1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        // TODO add your handling code here:
        String Mahoadon = txt_donhang.getText();
        String makh = txt_makh.getText();
        String tenkh = txt_tenkh.getText();
        String sdt = txt_sdt.getText();
        String diachi = txt_diachi.getText();
        HangTable hangtable = new HangTable();
        conn = db.getConnection();
        int i=0,number;
        Statement st = null;
        ResultSet rs = null;
        String sql;
        try{
            if("".equals(Mahoadon) || Mahoadon.isEmpty()){
                throw new e ("Vui lòng nhập mã hóa đơn");
            }
            if("".equals(makh)|| makh.isEmpty()){
                throw new e ("Vui lòng nhập mã khách hàng");
            }
            if("".equals(tenkh)|| tenkh.isEmpty()||"".equals(sdt)|| sdt.isEmpty()||"".equals(diachi)|| diachi.isEmpty()){
                throw new e ("Vui lòng nhập thông tin khách hàng");
            }
            
           
            LocalDate today = LocalDate.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            String formattedDate = today.format(formatter);
            while(TableXuatHang.getValueAt(i, 0)!=null){ //Ktra bảng đầy đủ thông tin chưa
                Object a1 = TableXuatHang.getValueAt(i, 0);
                Object a2 = TableXuatHang.getValueAt(i, 1);
                Object a3 = TableXuatHang.getValueAt(i, 2);
                Object a4 = TableXuatHang.getValueAt(i, 3);
                if(a1==null||a2==null||a3==null||a4==null){
                    throw new e("Bạn cần nhập đủ dữ liệu");
                }
                i++;
            }
            if(i==0){
                throw new e("Không được để hóa đơn rỗng");
            }
            
            int rowCount = i;   // lấy dl ở bảng
            for (int row = 0; row < rowCount; row++) {
               String a = (String) TableXuatHang.getValueAt(row, 0);
               String b = (String) TableXuatHang.getValueAt(row, 1);
               long c = (long) TableXuatHang.getValueAt(row, 2);
               int d = (int) TableXuatHang.getValueAt(row, 3);
               if(c<=0){// kiểm tra ngoại lệ
                   
                   throw new e("Đơn giá không thể âm");
               }
               if(d<=0){
                   throw new e("Số lượng không thể âm");
               }
               HangDb hang = new HangDb(a,b,c,d);
               hangtable.AddItem(hang);
            }
            hangtable.setNgaylap(formattedDate);
            hangtable.setMahoadon(Mahoadon);
            hangtable.Tinhtonggt();
            
            // kiểm tra đơn hàng 
            sql = "select maHoaDon from HoaDon where maKho= '" + tk + "' and maHoaDon ='" +hangtable.getMahoadon() +"'" ;
            st = conn.createStatement();
            rs = st.executeQuery(sql);
            //Kiểm tra hóa đơn đã có
            if(rs.next()){
                throw new e("Mã đơn hàng đã tồn tại. Vui lòng thử lại !");
            }
            
            
            for(i=0;i<hangtable.GetSoLuong();i++){// Bẫy lỗi thiếu hàng
                sql = "select MaHang,SoLuong from Hang where maKho= '" + tk + "' and MaHang = '" + hangtable.GetItem(i).getMaHang() +"'" ;
                st = conn.createStatement();
                rs = st.executeQuery(sql);
                if(rs.next()){
                    number = rs.getInt(2);
                    if(number<hangtable.GetItem(i).getSoLuong()){
                        throw new e("Không thể xuất hàng do hàng " + hangtable.GetItem(i).getMaHang() + " không đủ số lượng");
                    }
                }
                else {
                    throw new e("Không thể xuất hàng do hàng " + hangtable.GetItem(i).getMaHang() + " không đủ số lượng");
                }
            }
            for(i=0;i<hangtable.GetSoLuong();i++){// xuất hàng
                sql = "select MaHang,SoLuong from Hang where maKho= '" + tk + "' and MaHang = '" + hangtable.GetItem(i).getMaHang() +"'" ;
                st = conn.createStatement();
                rs = st.executeQuery(sql);
                if(rs.next()){
                    number = rs.getInt(2); // Lấy số lượng 
                    number = number - hangtable.GetItem(i).getSoLuong();
                    sql ="Update Hang set soLuong = "+ number  +"where maHang = '" +hangtable.GetItem(i).getMaHang()+"'" ;
                    st = conn.createStatement();
                    int kq = st.executeUpdate(sql);
                }
            }
            sql = "insert into HoaDon values('" + hangtable.getMahoadon() + "','"+ hangtable.getTonggiatri() + "','" + hangtable.getNgaylap() + "','"+ tk + "',N'Xuất','"+makh+"')";
            st = conn.createStatement();
            st.executeUpdate(sql);
            for(i=0;i<hangtable.GetSoLuong();i++){//thêm các dòng trên hóa đơn đó
                sql = "insert into dongHoaDon values('" + hangtable.getMahoadon() + "','"
                        + i+1 + "','" + hangtable.GetItem(i).getMaHang() + "',N'" 
                        +hangtable.GetItem(i).getTenHang() + "','" 
                        +hangtable.GetItem(i).getSoLuong() + "','"
                        +hangtable.GetItem(i).getDonGia() + "','"
                        +hangtable.GetItem(i).getSoLuong() * hangtable.GetItem(i).getDonGia() +"','" + tk +"')";
                st = conn.createStatement();
                st.executeUpdate(sql);
            }
            //thêm khách hàng (nếu có)
            sql = "select Makh from KhachHang where Makh ='"+makh +"'";
            st = conn.createStatement();
            rs = st.executeQuery(sql);
            if(!rs.next()){
                sql = "insert into KhachHang values ('" +makh +"',N'" +tenkh +"','"+sdt +"',N'" +diachi +"')";
                st = conn.createStatement();
                st.executeUpdate(sql);
            }    
            JOptionPane.showMessageDialog(this,"Xuất hàng thành công!");
            reset();            
            
        }catch(e e){
            JOptionPane.showMessageDialog(this, e.GetMassage());
            
        } catch (Exception ex) {
            ex.printStackTrace();
        }
                

    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_btnHuyActionPerformed

    private void TableXuatHangKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableXuatHangKeyReleased
        // TODO add your handling code here:
        conn = db.getConnection();
        Statement st = null;
        ResultSet rs = null;
        String sql,ten;
        long dongia;
        int i=0;
        try{
            i = TableXuatHang.getSelectedRow();
            /*while(TableXuatHang.getValueAt(i, 0)!=null){ //|| TableThemHang.getValueAt(i, 0).toString().isEmpty()){ //Ktra bảng đầy đủ thông tin chưa
                    Object a1 = TableXuatHang.getValueAt(i, 0);
                    Object a2 = TableXuatHang.getValueAt(i, 1);
                    if(a2==null){
                        break;
                    }
                    i++;
                }*/
            int rowCount = i;   // lấy dl ở dòng đang gõ
            String a = (String) TableXuatHang.getValueAt(i, 0);
            sql = "select TenHang,DonGia from Hang where maKho = '"+tk +"' and MaHang = '" + a + "'" ;
            st = conn.createStatement();
            rs = st.executeQuery(sql);
            if(rs.next()){
                ten = rs.getString(1);
                dongia = rs.getLong(2);
                TableXuatHang.setValueAt(ten, i, 1);
                TableXuatHang.setValueAt(dongia, i, 2);
            }
            
            TinhTong();
        }catch(SQLException ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_TableXuatHangKeyReleased

    private void TableXuatHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableXuatHangMouseClicked
        // TODO add your handling code here:
        conn = db.getConnection();
        Statement st = null;
        ResultSet rs = null;
        String sql,ten;
        long dongia;
        int i=0;
        try{
            while(TableXuatHang.getValueAt(i, 0)!=null){ //|| TableThemHang.getValueAt(i, 0).toString().isEmpty()){ //Ktra bảng đầy đủ thông tin chưa
                    Object a1 = TableXuatHang.getValueAt(i, 0);
                    Object a2 = TableXuatHang.getValueAt(i, 1);
                    if(a2==null){
                        break;
                    }
                    i++;
                }
            int rowCount = i;   // lấy dl ở dòng đang gõ
            String a = (String) TableXuatHang.getValueAt(i, 0);
            sql = "select TenHang,DonGia from Hang where maKho = '"+tk +"' and MaHang = '" + a + "'" ;
            st = conn.createStatement();
            rs = st.executeQuery(sql);
            if(rs.next()){
                ten = rs.getString(1);
                dongia = rs.getLong(2);
                TableXuatHang.setValueAt(ten, i, 1);
                TableXuatHang.setValueAt(dongia, i, 2);
            }
            else{
                TableXuatHang.setValueAt(null, i, 1);
                TableXuatHang.setValueAt(null, i, 2);
            }
            TinhTong();
        }catch(SQLException ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_TableXuatHangMouseClicked

    private void txt_sdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_sdtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_sdtActionPerformed

    private void txt_ngaylapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ngaylapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ngaylapActionPerformed

    private void txt_makhKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_makhKeyReleased
        // TODO add your handling code here:
        conn = db.getConnection();
        Statement st = null;
        ResultSet rs = null;
        String tenkh,sdt,diachi;
        try {
            String makh = txt_makh.getText();
            String sql = "select tenKH,sdt,Diachi from KhachHang where maKH ='" + makh +"'";
            st = conn.createStatement();
            rs = st.executeQuery(sql);
            if(rs.next()){
                tenkh = rs.getString(1);
                sdt = rs.getString(2);
                diachi = rs.getString(3);
                txt_tenkh.setText(tenkh);
                txt_sdt.setText(sdt);
                txt_diachi.setText(diachi);
            }
            else {
                txt_tenkh.setText("");
                txt_sdt.setText("");
                txt_diachi.setText("");
            }
        }catch(SQLException ex){
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_txt_makhKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableXuatHang;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txt_diachi;
    private javax.swing.JTextArea txt_donhang;
    private javax.swing.JTextField txt_makh;
    private javax.swing.JPanel txt_makh1;
    private javax.swing.JTextField txt_ngaylap;
    private javax.swing.JTextField txt_sdt;
    private javax.swing.JTextField txt_tenkh;
    private javax.swing.JTextField txt_tonghd;
    // End of variables declaration//GEN-END:variables
}


